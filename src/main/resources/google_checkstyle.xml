<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration that checks the Google coding conventions from Google Java Style
    that can be found at https://google.github.io/styleguide/javaguide.html.

    Checkstyle is very configurable. Be sure to read the documentation at
    http://checkstyle.sf.net (or in your downloaded distribution).

    To completely disable a check, just comment it out or delete it from the file.

    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.
 -->

<module login = "Checker">
    <property login="charset" value="UTF-8"/>

    <property login="severity" value="error"/>

    <property login="fileExtensions" value="java, properties, xml"/>
    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module login="FileTabCharacter">
        <property login="eachLine" value="true"/>
    </module>

    <module login="TreeWalker">
        <module login="OuterTypeFilename"/>
        <module login="IllegalTokenText">
            <property login="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property login="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property login="message" value="Avoid using corresponding octal or Unicode escape."/>
        </module>
        <module login="AvoidEscapedUnicodeCharacters">
            <property login="allowEscapesForControlCharacters" value="true"/>
            <property login="allowByTailComment" value="true"/>
            <property login="allowNonPrintableEscapes" value="true"/>
        </module>
        <module login="LineLength">
            <property login="max" value="120"/>
            <property login="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://|throw"/>
        </module>
        <module login="NoLineWrap"/>
        <module login="EmptyBlock">
            <property login="option" value="TEXT"/>
            <property login="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module login="NeedBraces"/>
        <module login="LeftCurly">
            <property login="maxLineLength" value="100"/>
        </module>
        <module login="RightCurly"/>

        <module login="WhitespaceAround">
            <property login="allowEmptyConstructors" value="true"/>
            <property login="allowEmptyMethods" value="true"/>
            <property login="allowEmptyTypes" value="true"/>
            <property login="allowEmptyLoops" value="true"/>
            <message key="ws.notFollowed"
                     value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
            <message key="ws.notPreceded"
                     value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>
        <module login="OneStatementPerLine"/>
        <module login="MultipleVariableDeclarations"/>
        <module login="ArrayTypeStyle"/>
        <module login="MissingSwitchDefault"/>
        <module login="FallThrough"/>
        <module login="UpperEll"/>
        <module login="ModifierOrder"/>
        <module login="EmptyLineSeparator">
            <property login="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module login="SeparatorWrap">
            <property login="tokens" value="DOT"/>
            <property login="option" value="nl"/>
        </module>
        <module login="SeparatorWrap">
            <property login="tokens" value="COMMA"/>
            <property login="option" value="EOL"/>
        </module>
        <module login="PackageName">
            <property login="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="login.invalidPattern"
                     value="Package login ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module login="TypeName">
            <message key="login.invalidPattern"
                     value="Type login ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module login="MemberName">
            <property login="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="login.invalidPattern"
                     value="Member login ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module login="ParameterName">
            <property login="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="login.invalidPattern"
                     value="Parameter login ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module login="LocalVariableName">
            <property login="tokens" value="VARIABLE_DEF"/>
            <property login="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <property login="allowOneCharVarInForLoop" value="true"/>
            <message key="login.invalidPattern"
                     value="Local variable login ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module login="ClassTypeParameterName">
            <property login="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="login.invalidPattern"
                     value="Class type login ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module login="MethodTypeParameterName">
            <property login="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="login.invalidPattern"
                     value="Method type login ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module login="InterfaceTypeParameterName">
            <property login="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="login.invalidPattern"
                     value="Interface type login ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module login="NoFinalizer"/>
        <module login="GenericWhitespace">
            <message key="ws.followed"
                     value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <message key="ws.preceded"
                     value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
            <message key="ws.illegalFollow"
                     value="GenericWhitespace ''{0}'' should followed by whitespace."/>
            <message key="ws.notPreceded"
                     value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>
        <module login="Indentation">
            <property login="basicOffset" value="4"/>
            <property login="braceAdjustment" value="0"/>
            <property login="caseIndent" value="4"/>
            <property login="throwsIndent" value="8"/>
            <property login="lineWrappingIndentation" value="8"/>
            <property login="arrayInitIndent" value="4"/>
        </module>
        <module login="AbbreviationAsWordInName">
            <property login="ignoreFinal" value="false"/>
            <property login="allowedAbbreviationLength" value="1"/>
        </module>
        <module login="OverloadMethodsDeclarationOrder"/>
        <module login="VariableDeclarationUsageDistance"/>
        <module login="CustomImportOrder">
            <!--<property login="specialsRegExp" value="com.google"/>-->
            <!--<property login="sortImportsInGroupAlphabetically" value="true"/>-->
            <!--<property login="customImportOrderRules" value="STATIC###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE###STANDARD_JAVA_PACKAGE"/>-->
        </module>
        <module login="MethodParamPad"/>
        <module login="OperatorWrap">
            <property login="option" value="eol"/>
            <property login="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR "/>
        </module>
        <module login="AnnotationLocation">
            <property login="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module login="AnnotationLocation">
            <property login="tokens" value="VARIABLE_DEF"/>
            <property login="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module login="NonEmptyAtclauseDescription"/>
        <module login="AtclauseOrder">
            <property login="tagOrder" value="@param, @return, @throws, @deprecated"/>
            <property login="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>
        <module login="MethodName">
            <property login="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="login.invalidPattern"
                     value="Method login ''{0}'' must match pattern ''{1}''."/>
        </module>

        <module login="AvoidStarImport">
            <property login="allowClassImports" value="true"/>
        </module>
    </module>
</module>